[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ccusage-monitor"
version = "1.0.1"
description = "Real-time Claude token usage monitor with beautiful terminal interface"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "zhiyue", email = "cszhiyue@gmail.com" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Utilities",
]
requires-python = ">=3.8"
dependencies = [
    "pytz>=2021.1",
    "rich>=13.0.0",
]

[project.scripts]
ccusage-monitor = "ccusage_monitor.main:main"

[project.urls]
Homepage = "https://github.com/zhiyue/ccusage-monitor"
Repository = "https://github.com/zhiyue/ccusage-monitor"
Issues = "https://github.com/zhiyue/ccusage-monitor/issues"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long - handled by formatter
    "SIM117", # multiple with statements
]

[tool.ruff.format]
# Use consistent formatting with Black-compatible settings
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["ccusage_monitor"]
omit = ["tests/*", "*/tests/*"]

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 2